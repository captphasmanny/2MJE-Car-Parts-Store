

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import pos.pmfuncs.MainFunc;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 *
 */
public class CheckFrame extends javax.swing.JFrame {
    JFrame frameChk;
    JFrame ConfirmFrame = new ConfirmFrame();
    public static String hahaTotal;
    
    
    
    
    /**
     * Creates new form CheckFrame
     */
    public CheckFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    
    
    public static boolean isNumber(String string) {
    if (string == null || string.isEmpty()) {
        return false;
    }
    int i = 0;
    if (string.charAt(0) == '-') {
        if (string.length() > 1) {
            i++;
        } else {
            return false;
        }
    }
    for (; i < string.length(); i++) {
        if (!Character.isDigit(string.charAt(i))) {
            return false;
        }
    }
    return true;
    }
    
public boolean isAlpha(String name) {
    return name.matches("[a-zA-Z]+");
}
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        CardCombo = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        CardNum = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        MonthCombo = new javax.swing.JComboBox();
        YearCombo = new javax.swing.JComboBox();
        SecureCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        FName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        LName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        BillAddress = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        CityName = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        StateCombo = new javax.swing.JComboBox();
        ZipCode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        PhoneNum = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        FinishButton = new javax.swing.JButton();
        SCTip = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PAYMENT/BILLING INFORMATION");

        jLabel2.setText("Please select a payment method:");

        CardCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "------", "Visa", "MasterCard", "Discover" }));

        jLabel3.setText("Account/Card Number:");

        jLabel4.setText("Expiration Date & Security Code:");

        MonthCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        YearCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "----", "2014", "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030", "2031", "2032", "2033", "2034", "2035", "2036", "2037", "2038", "2039" }));

        jLabel5.setText("First Name:");

        FName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FNameActionPerformed(evt);
            }
        });

        jLabel6.setText("Last Name:");

        jLabel7.setText("Billing Address:");

        jLabel8.setText("City:");

        jLabel9.setText("State:");

        jLabel10.setText("Phone Number:");

        StateCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--", "AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY" }));

        jLabel11.setText("Zip Code:");

        PhoneNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PhoneNumActionPerformed(evt);
            }
        });

        FinishButton.setText("Confirm Checkout");
        FinishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinishButtonActionPerformed(evt);
            }
        });

        SCTip.setFont(new java.awt.Font("Times New Roman", 0, 13)); // NOI18N
        SCTip.setLabel("?");
        SCTip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SCTipActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(FinishButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(CardCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(CardNum, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(MonthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(YearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(SecureCode, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(SCTip, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGap(35, 35, 35)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel7)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel6)
                                        .addComponent(LName, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                        .addComponent(FName)
                                        .addComponent(BillAddress))
                                    .addGap(36, 36, 36)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel10)
                                        .addComponent(CityName)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(StateCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabel9)
                                                    .addGap(57, 57, 57)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel11)
                                                .addComponent(ZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(PhoneNum))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CardCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(CityName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(StateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ZipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CardNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(MonthCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(YearCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(SecureCode, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BillAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(SCTip, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FinishButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FNameActionPerformed

    private void PhoneNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PhoneNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PhoneNumActionPerformed

    private void FinishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinishButtonActionPerformed
        // TODO add your handling code here:
        String cardCat = (String)CardCombo.getSelectedItem();
        String monthCat = (String)MonthCombo.getSelectedItem();
        String yearCat = (String)YearCombo.getSelectedItem();
        String stateCat = (String)StateCombo.getSelectedItem();
        String fnameCat = FName.getText().trim().toLowerCase().replaceAll("\\s+","");
        String lnameCat = LName.getText().trim().toLowerCase().replaceAll("\\s+","");
        String cityCat = CityName.getText().trim().toLowerCase().replaceAll("\\s+","");
        String billCat = BillAddress.getText().trim().toLowerCase().replaceAll("\\s+","");
        
        
        if(CardNum.getText().equals("")||FName.getText().equals("")||LName.getText().equals("")
                ||BillAddress.getText().equals("")||CityName.getText().equals("")
                ||ZipCode.getText().equals("")||PhoneNum.getText().equals("")
                ||monthCat.equals("--")||yearCat.equals("----")||stateCat.equals("--")
                ||cardCat.equals("------")){
            JOptionPane.showMessageDialog(frameChk, 
                        "You Must Finish All Fields.");
        }
        else if(isNumber(CardNum.getText()) == false || isNumber(SecureCode.getText()) == false
                ||isNumber(ZipCode.getText()) == false||isNumber(PhoneNum.getText()) == false){
            JOptionPane.showMessageDialog(frameChk, 
                        "You Must Enter a Number without Space.(Card Number/"
                                + "Secure Code/Zip Code/Phone Number)");
        }
        else if(CardNum.getText().length()!=16){
            JOptionPane.showMessageDialog(frameChk, 
                        "Card Number Must Be in 16 Digits.");
        }
        else if(SecureCode.getText().length()!=3){
            JOptionPane.showMessageDialog(frameChk, 
                        "Security Code Must Be in 3 Digits.");
        }
        else if(ZipCode.getText().length()!=5){
            JOptionPane.showMessageDialog(frameChk, 
                        "Zip Code Must Be in 5 Digits.");
        }
        else if(PhoneNum.getText().length()!=10){
            JOptionPane.showMessageDialog(frameChk, 
                        "Phone Number Must Be in 10 Digits.");
        }
        else if(isAlpha(fnameCat) == false||isAlpha(lnameCat) == false
                ||isAlpha(cityCat) == false){
            JOptionPane.showMessageDialog(frameChk, 
                        "You Have To Enter Letters.(First-Last Name/Address/City)");
        }
        else if(!billCat.matches("^[a-z0-9]*$")){
            JOptionPane.showMessageDialog(frameChk, 
                        "You Can Only Enter Numbers & Letters for Billing Address");
        }
        else if(cardCat.equals("Visa") && !CardNum.getText().matches("^4[0-9]{12}(?:[0-9]{3})?$")){
            JOptionPane.showMessageDialog(frameChk, 
                        "Please Enter The Valid Card Number for Visa.");
        }
        else if(cardCat.equals("MasterCard") && !CardNum.getText().matches("^5[1-5][0-9]{14}$")){
            JOptionPane.showMessageDialog(frameChk, 
                        "Please Enter The Valid Card Number for MasterCard.");
        }
        else if(cardCat.equals("Discover") && !CardNum.getText().matches("^6(?:011|5[0-9]{2})[0-9]{12}$")){
            JOptionPane.showMessageDialog(frameChk, 
                        "Please Enter The Valid Card Number for Discover.");
        }
        else if(!PhoneNum.getText().matches("^[2-9][0-9][0-9][2-9][0-9]{6}$")){
            JOptionPane.showMessageDialog(frameChk, 
                        "Please Enter The Valid US Phone Number with NANP Format.");
        }
        else{
            JDialog.setDefaultLookAndFeelDecorated(true);
    int response = JOptionPane.showConfirmDialog(null, "Do you want to continue?", "Confirm",
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
    if (response == JOptionPane.NO_OPTION) {
      //System.out.println("No button clicked");
    
    } else if (response == JOptionPane.YES_OPTION) {
      //System.out.println("Yes button clicked");
                    //JOptionPane.showMessageDialog(frameChk, 
                        //"You Are Right.");
        
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd###HH:mm:ss");
            Date date = new Date();
            String plsWrite = dateFormat.format(date)+"###"+cardCat+"###"
                +CardNum.getText()+"###"+monthCat+"###"+yearCat+"###"
                +SecureCode.getText()+"###"+FName.getText()+"###"+LName.getText()+"###"
                +BillAddress.getText()+"###"+CityName.getText()+"###"
                +stateCat+"###"+ZipCode.getText()+"###"+PhoneNum.getText()+"###"+MainFunc.RTF2("PaymentCurr.txt");
            //System.out.println(dateFormat.format(date));
                       
                BufferedWriter writer;
                BufferedWriter writer2;
            try
    {
    File file = new File("PaymentCurr.txt");
    File file2 = new File("PaymentHistory.txt");
    if(!file.exists()){
        file.createNewFile();
    }
    if(!file2.exists()){
        file2.createNewFile();
    }
    writer = new BufferedWriter(new FileWriter(file));//Overwrite
    writer2 = new BufferedWriter(new FileWriter(file2, true));//Not Overwrite

                writer.write(plsWrite);
                writer.newLine();
                writer2.write(plsWrite);
                writer2.newLine();
                //System.out.println(SEAList[i]);
    writer.close();
    writer2.close();

    }
    catch(FileNotFoundException e)
    {
        System.out.println("File Not Found");
        //System.exit( 1 );
    }
    catch(IOException e)
    {
        System.out.println("something messed up");
        //System.exit( 1 );
    }
        MainFunc.QuanChg();
        ConfirmFrame.pack();
        ConfirmFrame.setLocationRelativeTo(null);
        ConfirmFrame.setVisible(true);
        setVisible(false);
        dispose();
    } else if (response == JOptionPane.CLOSED_OPTION) {
      //System.out.println("JOptionPane closed");
    }
            
    
        }
        
    }//GEN-LAST:event_FinishButtonActionPerformed

    private void SCTipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SCTipActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(frameChk,
            "Security Code a separate group of 3 digits to the right of the signature strip.");

    }//GEN-LAST:event_SCTipActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        CardNum.setText("");
        SecureCode.setText("");
        FName.setText("");
        LName.setText("");
        BillAddress.setText("");
        CityName.setText("");
        ZipCode.setText("");
        PhoneNum.setText("");
        CardCombo.setSelectedItem("------");
        MonthCombo.setSelectedItem("--");
        YearCombo.setSelectedItem("----");
        StateCombo.setSelectedItem("--");
    }//GEN-LAST:event_formWindowClosed

        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField BillAddress;
    private javax.swing.JComboBox CardCombo;
    private javax.swing.JTextField CardNum;
    private javax.swing.JTextField CityName;
    private javax.swing.JTextField FName;
    private javax.swing.JButton FinishButton;
    private javax.swing.JTextField LName;
    private javax.swing.JComboBox MonthCombo;
    private javax.swing.JTextField PhoneNum;
    private java.awt.Button SCTip;
    private javax.swing.JTextField SecureCode;
    private javax.swing.JComboBox StateCombo;
    private javax.swing.JComboBox YearCombo;
    private javax.swing.JTextField ZipCode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
